// Code generated by protoc-gen-go. DO NOT EDIT.
// source: doc.proto

package doc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HeartReq struct {
	Msg                  int32    `protobuf:"varint,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartReq) Reset()         { *m = HeartReq{} }
func (m *HeartReq) String() string { return proto.CompactTextString(m) }
func (*HeartReq) ProtoMessage()    {}
func (*HeartReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_doc_ff092fd7cba61d2c, []int{0}
}
func (m *HeartReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartReq.Unmarshal(m, b)
}
func (m *HeartReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartReq.Marshal(b, m, deterministic)
}
func (dst *HeartReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartReq.Merge(dst, src)
}
func (m *HeartReq) XXX_Size() int {
	return xxx_messageInfo_HeartReq.Size(m)
}
func (m *HeartReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartReq.DiscardUnknown(m)
}

var xxx_messageInfo_HeartReq proto.InternalMessageInfo

func (m *HeartReq) GetMsg() int32 {
	if m != nil {
		return m.Msg
	}
	return 0
}

// The request message containing the user's name.
type DocReq struct {
	DocId                uint64       `protobuf:"varint,1,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`
	Content              string       `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Attri                []byte       `protobuf:"bytes,3,opt,name=attri,proto3" json:"attri,omitempty"`
	Tokens               []*TokenData `protobuf:"bytes,4,rep,name=tokens,proto3" json:"tokens,omitempty"`
	Labels               []string     `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty"`
	Fields               []byte       `protobuf:"bytes,6,opt,name=fields,proto3" json:"fields,omitempty"`
	ForceUpdate          bool         `protobuf:"varint,7,opt,name=forceUpdate,proto3" json:"forceUpdate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DocReq) Reset()         { *m = DocReq{} }
func (m *DocReq) String() string { return proto.CompactTextString(m) }
func (*DocReq) ProtoMessage()    {}
func (*DocReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_doc_ff092fd7cba61d2c, []int{1}
}
func (m *DocReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocReq.Unmarshal(m, b)
}
func (m *DocReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocReq.Marshal(b, m, deterministic)
}
func (dst *DocReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocReq.Merge(dst, src)
}
func (m *DocReq) XXX_Size() int {
	return xxx_messageInfo_DocReq.Size(m)
}
func (m *DocReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DocReq.DiscardUnknown(m)
}

var xxx_messageInfo_DocReq proto.InternalMessageInfo

func (m *DocReq) GetDocId() uint64 {
	if m != nil {
		return m.DocId
	}
	return 0
}

func (m *DocReq) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *DocReq) GetAttri() []byte {
	if m != nil {
		return m.Attri
	}
	return nil
}

func (m *DocReq) GetTokens() []*TokenData {
	if m != nil {
		return m.Tokens
	}
	return nil
}

func (m *DocReq) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *DocReq) GetFields() []byte {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *DocReq) GetForceUpdate() bool {
	if m != nil {
		return m.ForceUpdate
	}
	return false
}

type TokenData struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Locations            []int32  `protobuf:"varint,2,rep,packed,name=locations,proto3" json:"locations,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenData) Reset()         { *m = TokenData{} }
func (m *TokenData) String() string { return proto.CompactTextString(m) }
func (*TokenData) ProtoMessage()    {}
func (*TokenData) Descriptor() ([]byte, []int) {
	return fileDescriptor_doc_ff092fd7cba61d2c, []int{2}
}
func (m *TokenData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenData.Unmarshal(m, b)
}
func (m *TokenData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenData.Marshal(b, m, deterministic)
}
func (dst *TokenData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenData.Merge(dst, src)
}
func (m *TokenData) XXX_Size() int {
	return xxx_messageInfo_TokenData.Size(m)
}
func (m *TokenData) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenData.DiscardUnknown(m)
}

var xxx_messageInfo_TokenData proto.InternalMessageInfo

func (m *TokenData) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *TokenData) GetLocations() []int32 {
	if m != nil {
		return m.Locations
	}
	return nil
}

type DeleteReq struct {
	DocId                uint64   `protobuf:"varint,1,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteReq) Reset()         { *m = DeleteReq{} }
func (m *DeleteReq) String() string { return proto.CompactTextString(m) }
func (*DeleteReq) ProtoMessage()    {}
func (*DeleteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_doc_ff092fd7cba61d2c, []int{3}
}
func (m *DeleteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReq.Unmarshal(m, b)
}
func (m *DeleteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReq.Marshal(b, m, deterministic)
}
func (dst *DeleteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReq.Merge(dst, src)
}
func (m *DeleteReq) XXX_Size() int {
	return xxx_messageInfo_DeleteReq.Size(m)
}
func (m *DeleteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReq proto.InternalMessageInfo

func (m *DeleteReq) GetDocId() uint64 {
	if m != nil {
		return m.DocId
	}
	return 0
}

// 0 succeed, 1 fail
type Reply struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_doc_ff092fd7cba61d2c, []int{4}
}
func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (dst *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(dst, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type SearchReq struct {
	Id                   string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Query                string          `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	OutputOffset         int32           `protobuf:"varint,3,opt,name=outputOffset,proto3" json:"outputOffset,omitempty"`
	MaxOutputs           int32           `protobuf:"varint,4,opt,name=maxOutputs,proto3" json:"maxOutputs,omitempty"`
	Time                 string          `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	DocIds               map[uint64]bool `protobuf:"bytes,6,rep,name=docIds,proto3" json:"docIds,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Logic                *Logic          `protobuf:"bytes,7,opt,name=logic,proto3" json:"logic,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SearchReq) Reset()         { *m = SearchReq{} }
func (m *SearchReq) String() string { return proto.CompactTextString(m) }
func (*SearchReq) ProtoMessage()    {}
func (*SearchReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_doc_ff092fd7cba61d2c, []int{5}
}
func (m *SearchReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchReq.Unmarshal(m, b)
}
func (m *SearchReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchReq.Marshal(b, m, deterministic)
}
func (dst *SearchReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchReq.Merge(dst, src)
}
func (m *SearchReq) XXX_Size() int {
	return xxx_messageInfo_SearchReq.Size(m)
}
func (m *SearchReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchReq.DiscardUnknown(m)
}

var xxx_messageInfo_SearchReq proto.InternalMessageInfo

func (m *SearchReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SearchReq) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *SearchReq) GetOutputOffset() int32 {
	if m != nil {
		return m.OutputOffset
	}
	return 0
}

func (m *SearchReq) GetMaxOutputs() int32 {
	if m != nil {
		return m.MaxOutputs
	}
	return 0
}

func (m *SearchReq) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *SearchReq) GetDocIds() map[uint64]bool {
	if m != nil {
		return m.DocIds
	}
	return nil
}

func (m *SearchReq) GetLogic() *Logic {
	if m != nil {
		return m.Logic
	}
	return nil
}

type SearchReply struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Len                  int32    `protobuf:"varint,2,opt,name=len,proto3" json:"len,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Docs                 []*Text  `protobuf:"bytes,4,rep,name=docs,proto3" json:"docs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchReply) Reset()         { *m = SearchReply{} }
func (m *SearchReply) String() string { return proto.CompactTextString(m) }
func (*SearchReply) ProtoMessage()    {}
func (*SearchReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_doc_ff092fd7cba61d2c, []int{6}
}
func (m *SearchReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchReply.Unmarshal(m, b)
}
func (m *SearchReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchReply.Marshal(b, m, deterministic)
}
func (dst *SearchReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchReply.Merge(dst, src)
}
func (m *SearchReply) XXX_Size() int {
	return xxx_messageInfo_SearchReply.Size(m)
}
func (m *SearchReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchReply.DiscardUnknown(m)
}

var xxx_messageInfo_SearchReply proto.InternalMessageInfo

func (m *SearchReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *SearchReply) GetLen() int32 {
	if m != nil {
		return m.Len
	}
	return 0
}

func (m *SearchReply) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *SearchReply) GetDocs() []*Text {
	if m != nil {
		return m.Docs
	}
	return nil
}

type Text struct {
	// string id = 1;
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Attri                *Attri   `protobuf:"bytes,3,opt,name=attri,proto3" json:"attri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Text) Reset()         { *m = Text{} }
func (m *Text) String() string { return proto.CompactTextString(m) }
func (*Text) ProtoMessage()    {}
func (*Text) Descriptor() ([]byte, []int) {
	return fileDescriptor_doc_ff092fd7cba61d2c, []int{7}
}
func (m *Text) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Text.Unmarshal(m, b)
}
func (m *Text) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Text.Marshal(b, m, deterministic)
}
func (dst *Text) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Text.Merge(dst, src)
}
func (m *Text) XXX_Size() int {
	return xxx_messageInfo_Text.Size(m)
}
func (m *Text) XXX_DiscardUnknown() {
	xxx_messageInfo_Text.DiscardUnknown(m)
}

var xxx_messageInfo_Text proto.InternalMessageInfo

func (m *Text) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Text) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Text) GetAttri() *Attri {
	if m != nil {
		return m.Attri
	}
	return nil
}

type Attri struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Author               string   `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	Time                 string   `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	Ts                   int64    `protobuf:"varint,4,opt,name=ts,proto3" json:"ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Attri) Reset()         { *m = Attri{} }
func (m *Attri) String() string { return proto.CompactTextString(m) }
func (*Attri) ProtoMessage()    {}
func (*Attri) Descriptor() ([]byte, []int) {
	return fileDescriptor_doc_ff092fd7cba61d2c, []int{8}
}
func (m *Attri) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Attri.Unmarshal(m, b)
}
func (m *Attri) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Attri.Marshal(b, m, deterministic)
}
func (dst *Attri) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Attri.Merge(dst, src)
}
func (m *Attri) XXX_Size() int {
	return xxx_messageInfo_Attri.Size(m)
}
func (m *Attri) XXX_DiscardUnknown() {
	xxx_messageInfo_Attri.DiscardUnknown(m)
}

var xxx_messageInfo_Attri proto.InternalMessageInfo

func (m *Attri) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Attri) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Attri) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *Attri) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

type Logic struct {
	// 与查询, 必须都存在
	Must bool `protobuf:"varint,1,opt,name=must,proto3" json:"must,omitempty"`
	// 或查询, 有一个存在即可
	Should bool `protobuf:"varint,2,opt,name=should,proto3" json:"should,omitempty"`
	// 非查询, 不包含
	NotIn                bool       `protobuf:"varint,3,opt,name=notIn,proto3" json:"notIn,omitempty"`
	LogicExpr            *LogicExpr `protobuf:"bytes,4,opt,name=logicExpr,proto3" json:"logicExpr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Logic) Reset()         { *m = Logic{} }
func (m *Logic) String() string { return proto.CompactTextString(m) }
func (*Logic) ProtoMessage()    {}
func (*Logic) Descriptor() ([]byte, []int) {
	return fileDescriptor_doc_ff092fd7cba61d2c, []int{9}
}
func (m *Logic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Logic.Unmarshal(m, b)
}
func (m *Logic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Logic.Marshal(b, m, deterministic)
}
func (dst *Logic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Logic.Merge(dst, src)
}
func (m *Logic) XXX_Size() int {
	return xxx_messageInfo_Logic.Size(m)
}
func (m *Logic) XXX_DiscardUnknown() {
	xxx_messageInfo_Logic.DiscardUnknown(m)
}

var xxx_messageInfo_Logic proto.InternalMessageInfo

func (m *Logic) GetMust() bool {
	if m != nil {
		return m.Must
	}
	return false
}

func (m *Logic) GetShould() bool {
	if m != nil {
		return m.Should
	}
	return false
}

func (m *Logic) GetNotIn() bool {
	if m != nil {
		return m.NotIn
	}
	return false
}

func (m *Logic) GetLogicExpr() *LogicExpr {
	if m != nil {
		return m.LogicExpr
	}
	return nil
}

// LogicExpr logic expression options
type LogicExpr struct {
	// mustLabels, with the query that must exist
	MustLabels []string `protobuf:"bytes,1,rep,name=mustLabels,proto3" json:"mustLabels,omitempty"`
	// shouldLabels, there is one can exist
	ShouldLabels []string `protobuf:"bytes,2,rep,name=shouldLabels,proto3" json:"shouldLabels,omitempty"`
	// notInLabels, not included
	NotInLabels          []string `protobuf:"bytes,3,rep,name=notInLabels,proto3" json:"notInLabels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogicExpr) Reset()         { *m = LogicExpr{} }
func (m *LogicExpr) String() string { return proto.CompactTextString(m) }
func (*LogicExpr) ProtoMessage()    {}
func (*LogicExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_doc_ff092fd7cba61d2c, []int{10}
}
func (m *LogicExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogicExpr.Unmarshal(m, b)
}
func (m *LogicExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogicExpr.Marshal(b, m, deterministic)
}
func (dst *LogicExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogicExpr.Merge(dst, src)
}
func (m *LogicExpr) XXX_Size() int {
	return xxx_messageInfo_LogicExpr.Size(m)
}
func (m *LogicExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_LogicExpr.DiscardUnknown(m)
}

var xxx_messageInfo_LogicExpr proto.InternalMessageInfo

func (m *LogicExpr) GetMustLabels() []string {
	if m != nil {
		return m.MustLabels
	}
	return nil
}

func (m *LogicExpr) GetShouldLabels() []string {
	if m != nil {
		return m.ShouldLabels
	}
	return nil
}

func (m *LogicExpr) GetNotInLabels() []string {
	if m != nil {
		return m.NotInLabels
	}
	return nil
}

func init() {
	proto.RegisterType((*HeartReq)(nil), "doc.HeartReq")
	proto.RegisterType((*DocReq)(nil), "doc.DocReq")
	proto.RegisterType((*TokenData)(nil), "doc.TokenData")
	proto.RegisterType((*DeleteReq)(nil), "doc.DeleteReq")
	proto.RegisterType((*Reply)(nil), "doc.Reply")
	proto.RegisterType((*SearchReq)(nil), "doc.SearchReq")
	proto.RegisterMapType((map[uint64]bool)(nil), "doc.SearchReq.DocIdsEntry")
	proto.RegisterType((*SearchReply)(nil), "doc.SearchReply")
	proto.RegisterType((*Text)(nil), "doc.Text")
	proto.RegisterType((*Attri)(nil), "doc.Attri")
	proto.RegisterType((*Logic)(nil), "doc.Logic")
	proto.RegisterType((*LogicExpr)(nil), "doc.LogicExpr")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	// Sends a greeting
	HeartBeat(ctx context.Context, in *HeartReq, opts ...grpc.CallOption) (*Reply, error)
	DocInx(ctx context.Context, in *DocReq, opts ...grpc.CallOption) (*Reply, error)
	Delete(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*Reply, error)
	Search(ctx context.Context, in *SearchReq, opts ...grpc.CallOption) (*SearchReply, error)
}

type greeterClient struct {
	cc *grpc.ClientConn
}

func NewGreeterClient(cc *grpc.ClientConn) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) HeartBeat(ctx context.Context, in *HeartReq, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/doc.Greeter/HeartBeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) DocInx(ctx context.Context, in *DocReq, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/doc.Greeter/DocInx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) Delete(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/doc.Greeter/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) Search(ctx context.Context, in *SearchReq, opts ...grpc.CallOption) (*SearchReply, error) {
	out := new(SearchReply)
	err := c.cc.Invoke(ctx, "/doc.Greeter/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	// Sends a greeting
	HeartBeat(context.Context, *HeartReq) (*Reply, error)
	DocInx(context.Context, *DocReq) (*Reply, error)
	Delete(context.Context, *DeleteReq) (*Reply, error)
	Search(context.Context, *SearchReq) (*SearchReply, error)
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_HeartBeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).HeartBeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/doc.Greeter/HeartBeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).HeartBeat(ctx, req.(*HeartReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_DocInx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DocReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).DocInx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/doc.Greeter/DocInx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).DocInx(ctx, req.(*DocReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/doc.Greeter/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).Delete(ctx, req.(*DeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/doc.Greeter/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).Search(ctx, req.(*SearchReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "doc.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HeartBeat",
			Handler:    _Greeter_HeartBeat_Handler,
		},
		{
			MethodName: "DocInx",
			Handler:    _Greeter_DocInx_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Greeter_Delete_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _Greeter_Search_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "doc.proto",
}

func init() { proto.RegisterFile("doc.proto", fileDescriptor_doc_ff092fd7cba61d2c) }

var fileDescriptor_doc_ff092fd7cba61d2c = []byte{
	// 705 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x54, 0xd1, 0x6a, 0xdb, 0x4a,
	0x10, 0xbd, 0x92, 0x2c, 0xc5, 0x1a, 0xe7, 0x86, 0xb0, 0xdc, 0x7b, 0x11, 0x26, 0xb7, 0x15, 0x2a,
	0x04, 0x3d, 0x84, 0x3c, 0xb8, 0x2f, 0x6d, 0xa1, 0x0f, 0x0d, 0x0e, 0x8d, 0xc1, 0x10, 0xd8, 0xb6,
	0x94, 0x3e, 0x15, 0x45, 0x1a, 0x27, 0x22, 0xb2, 0xd6, 0x91, 0x56, 0xad, 0xfd, 0x2b, 0x7d, 0xec,
	0x07, 0xf4, 0x3f, 0xfa, 0x57, 0x65, 0x66, 0xd7, 0x8e, 0x12, 0xc8, 0xdb, 0x9e, 0xb3, 0xb3, 0xb3,
	0x3b, 0x67, 0xce, 0x2c, 0x84, 0x85, 0xca, 0x4f, 0x57, 0x8d, 0xd2, 0x4a, 0x78, 0x85, 0xca, 0x93,
	0x23, 0x18, 0x5e, 0x60, 0xd6, 0x68, 0x89, 0x77, 0xe2, 0x10, 0xbc, 0x65, 0x7b, 0x1d, 0x39, 0xb1,
	0x93, 0xfa, 0x92, 0x96, 0xc9, 0x6f, 0x07, 0x82, 0xa9, 0xca, 0x69, 0xf3, 0x5f, 0x08, 0x0a, 0x95,
	0x7f, 0x2d, 0x0b, 0xde, 0x1f, 0x48, 0xbf, 0x50, 0xf9, 0xac, 0x10, 0x11, 0xec, 0xe5, 0xaa, 0xd6,
	0x58, 0xeb, 0xc8, 0x8d, 0x9d, 0x34, 0x94, 0x5b, 0x28, 0xfe, 0x01, 0x3f, 0xd3, 0xba, 0x29, 0x23,
	0x2f, 0x76, 0xd2, 0x7d, 0x69, 0x80, 0x38, 0x86, 0x40, 0xab, 0x5b, 0xac, 0xdb, 0x68, 0x10, 0x7b,
	0xe9, 0x68, 0x72, 0x70, 0x4a, 0x0f, 0xfa, 0x48, 0xd4, 0x34, 0xd3, 0x99, 0xb4, 0xbb, 0xe2, 0x3f,
	0x08, 0xaa, 0xec, 0x0a, 0xab, 0x36, 0xf2, 0x63, 0x2f, 0x0d, 0xa5, 0x45, 0xc4, 0x2f, 0x4a, 0xac,
	0x8a, 0x36, 0x0a, 0x38, 0xad, 0x45, 0x22, 0x86, 0xd1, 0x42, 0x35, 0x39, 0x7e, 0x5a, 0x15, 0x99,
	0xc6, 0x68, 0x2f, 0x76, 0xd2, 0xa1, 0xec, 0x53, 0xc9, 0x5b, 0x08, 0x77, 0xd7, 0x08, 0x01, 0x03,
	0x8d, 0x6b, 0xcd, 0xb5, 0x84, 0x92, 0xd7, 0xe2, 0x08, 0xc2, 0x4a, 0xe5, 0x99, 0x2e, 0x55, 0xdd,
	0x46, 0x6e, 0xec, 0xa5, 0xbe, 0xbc, 0x27, 0x92, 0x04, 0xc2, 0x29, 0x56, 0xa8, 0xf1, 0x69, 0x31,
	0x92, 0xe7, 0xe0, 0x4b, 0x5c, 0x55, 0x1b, 0x7a, 0x65, 0x83, 0x6d, 0x57, 0x69, 0x2b, 0xa6, 0x45,
	0xc9, 0x0f, 0x17, 0xc2, 0x0f, 0x98, 0x35, 0xf9, 0x0d, 0x65, 0x39, 0x00, 0xd7, 0x66, 0x08, 0xa5,
	0x5b, 0x16, 0xa4, 0xd8, 0x5d, 0x87, 0xcd, 0xc6, 0x2a, 0x69, 0x80, 0x48, 0x60, 0x5f, 0x75, 0x7a,
	0xd5, 0xe9, 0xcb, 0xc5, 0xa2, 0x45, 0xcd, 0x72, 0xfa, 0xf2, 0x01, 0x27, 0x9e, 0x01, 0x2c, 0xb3,
	0xf5, 0x25, 0x53, 0xa4, 0x2c, 0x45, 0xf4, 0x18, 0x2e, 0xb7, 0x5c, 0x62, 0xe4, 0xdb, 0x72, 0xcb,
	0x25, 0x8a, 0x09, 0xd7, 0x30, 0x63, 0x25, 0xa9, 0x13, 0x63, 0xee, 0xc4, 0xee, 0x75, 0xa7, 0x53,
	0xde, 0x3c, 0xaf, 0x75, 0xb3, 0x91, 0x36, 0x52, 0xc4, 0xe0, 0x57, 0xea, 0xba, 0xcc, 0x59, 0xdf,
	0xd1, 0x04, 0xf8, 0xc8, 0x9c, 0x18, 0x69, 0x36, 0xc6, 0xaf, 0x61, 0xd4, 0x3b, 0x48, 0x96, 0xba,
	0xc5, 0x8d, 0x55, 0x89, 0x96, 0x54, 0xe4, 0xb7, 0xac, 0xea, 0x90, 0x8b, 0x1c, 0x4a, 0x03, 0xde,
	0xb8, 0xaf, 0x9c, 0x64, 0x05, 0xa3, 0xed, 0xed, 0xa4, 0xa1, 0x80, 0x41, 0xae, 0x0a, 0xb4, 0x0a,
	0xf2, 0x9a, 0xd2, 0x55, 0x58, 0xf3, 0x51, 0x5f, 0xd2, 0x92, 0x9a, 0x46, 0xd5, 0xb4, 0x3a, 0x5b,
	0xae, 0x58, 0x1a, 0x4f, 0xde, 0x13, 0xe2, 0x7f, 0x18, 0x14, 0x2a, 0xdf, 0x7a, 0x2d, 0x34, 0x5e,
	0xc3, 0xb5, 0x96, 0x4c, 0x27, 0x12, 0x06, 0x84, 0x7a, 0x8d, 0x18, 0x70, 0x23, 0x9e, 0x36, 0x75,
	0xdc, 0x37, 0xf5, 0x56, 0x80, 0x77, 0xc4, 0x58, 0x83, 0x27, 0x5f, 0xc0, 0x67, 0x4c, 0x85, 0xea,
	0x52, 0x57, 0x68, 0x1b, 0x6c, 0x00, 0x39, 0x23, 0xeb, 0xf4, 0x8d, 0x6a, 0x6c, 0x66, 0x8b, 0x76,
	0x1d, 0xf2, 0x7a, 0x1d, 0x3a, 0x00, 0xd7, 0x76, 0xd3, 0x93, 0xae, 0x6e, 0x93, 0xef, 0xe0, 0xb3,
	0xd6, 0x14, 0xbc, 0xec, 0x5a, 0x63, 0xae, 0xa1, 0xe4, 0x35, 0x25, 0x6e, 0x6f, 0x54, 0x57, 0x15,
	0x56, 0x58, 0x8b, 0xe8, 0x19, 0xb5, 0xd2, 0xb3, 0x9a, 0x33, 0x0f, 0xa5, 0x01, 0xe2, 0x84, 0xbc,
	0x7e, 0x5d, 0xe6, 0xe7, 0xeb, 0x55, 0xc3, 0x37, 0x6c, 0x27, 0x71, 0xbe, 0x65, 0xe5, 0x7d, 0x40,
	0x72, 0x07, 0xe1, 0x8e, 0x67, 0xaf, 0x75, 0xad, 0x9e, 0x9b, 0xe9, 0x74, 0x78, 0x3a, 0x7b, 0x0c,
	0xf9, 0xd5, 0x5c, 0x6d, 0x23, 0x5c, 0x8e, 0x78, 0xc0, 0xd1, 0xb4, 0xf2, 0x3b, 0x6c, 0x88, 0xc7,
	0x21, 0x7d, 0x6a, 0xf2, 0xcb, 0x81, 0xbd, 0xf7, 0x0d, 0xa2, 0xc6, 0x46, 0xa4, 0x10, 0xf2, 0x1f,
	0x75, 0x86, 0x99, 0x16, 0x7f, 0xf3, 0x33, 0xb7, 0x7f, 0xd6, 0xd8, 0x74, 0x80, 0x1d, 0x93, 0xfc,
	0x25, 0x5e, 0xf0, 0x77, 0x35, 0xab, 0xd7, 0x62, 0xc4, 0xbc, 0xf9, 0xbb, 0x1e, 0x05, 0x1d, 0x43,
	0x60, 0x26, 0x59, 0x98, 0x92, 0x77, 0x63, 0xfd, 0x28, 0xee, 0x04, 0x02, 0xe3, 0x47, 0x1b, 0xb7,
	0x1b, 0x8d, 0xf1, 0xe1, 0x03, 0xcc, 0xd1, 0x67, 0xc1, 0x4f, 0xd7, 0xbb, 0x98, 0x7f, 0xbe, 0x0a,
	0xf8, 0x73, 0x7d, 0xf9, 0x27, 0x00, 0x00, 0xff, 0xff, 0x86, 0xcd, 0xcd, 0xaf, 0x69, 0x05, 0x00,
	0x00,
}
